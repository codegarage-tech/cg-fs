apply plugin: 'com.android.application'
apply plugin: 'deploygate'

repositories {
    maven {
        url "https://raw.github.com/reversecoder/rc-permission-androidstudio/snapshots"
    }
    maven {
        url "https://raw.github.com/reversecoder/rc-librarydemo-androidstudio/snapshots"
    }
    maven {
        url "https://raw.github.com/reversecoder/rc-logger-demo/snapshots"
    }
}

android {
    signingConfigs {
        releaseConfig {
            try {
                keyAlias 'keydata.keystore'
                keyPassword KEY_PASSWORD
                storeFile file('../misc/keydata.keystore')
                storePassword KEYSTORE_PASSWORD
            } catch (ex) {
                throw new InvalidUserDataException("You should define KEYSTORE_PASSWORD and KEY_PASSWORD in gradle.properties.")
            }
        }
    }

    compileSdkVersion appCompileSdkVersion
    buildToolsVersion appBuildToolsVersion

    defaultConfig {
        applicationId "com.rc.foodsignal"
        minSdkVersion appMinSdkVersion
        targetSdkVersion appTargetSdkVersion
        versionCode appVersionCode
        versionName appVersionName

        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
//            applicationIdSuffix ".debug"

            shrinkResources false
            minifyEnabled false
            debuggable true
        }
        release {
            shrinkResources false
            minifyEnabled false
            debuggable false

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.releaseConfig
        }
    }

    flavorDimensions "default"
    productFlavors {
        stage {
//            applicationIdSuffix ".stage"
        }
        pro {
//            applicationIdSuffix ".pro"
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->

            def stringsFile = android.sourceSets.main.res.sourceFiles.find {
                it.name.equals 'strings.xml'
            }
            def appName = new XmlParser().parse(stringsFile).string.find { it.@name.equals 'app_name' }.text()
            def separator = "_"
            def flavor = variant.getFlavorName()
            def version = variant.versionName
            def buildType = variant.baseName.split("-")[1]
            def releaseApkName = appName + separator + flavor + separator + version + separator + buildType + ".apk"
            outputFileName = releaseApkName
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    compile "com.android.support.constraint:constraint-layout:$constraintLayoutVersion"
    compile "com.android.support:appcompat-v7:$supportlibraryVersion"
    compile "com.android.support:cardview-v7:$supportlibraryVersion"
    compile "com.android.support:support-v4:$supportlibraryVersion"
    compile "com.android.support:design:$supportlibraryVersion"
    compile "com.google.android.gms:play-services-location:$googlePlayServiceLocationVersion"
    compile "com.google.android.gms:play-services-maps:$googlePlayServiceLocationVersion"

    //library projects
    compile project(":ribblemenu")
    compile project(":placesautocomplete")
    compile project(":easyrecyclerview")
    compile project(":matisse")
    compile project(":imagezipper")
    compile project(":fabulousfilter")
    compile project(":expansionpanel")
    compile project(":flowlayout")
    compile project(":bubblepagerindicator")
    compile project(":gcm")
    compile project(":proswipebutton")
    compile project(":cardslider")
    compile project(":incrementproductview")

    compile 'com.reversecoder.permission:rc-permission:1.0.1-SNAPSHOT'
    compile 'com.reversecoder.library:rc-library:1.0.1-SNAPSHOT'
    compile 'com.reversecoder.logger:rc-logger:1.0.1-SNAPSHOT'

    //Image loading
    compile "com.github.bumptech.glide:glide:$glideVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$glideVersion"

    testImplementation 'junit:junit:4.12'
}